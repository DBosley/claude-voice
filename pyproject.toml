[project]
name = "claude-voice"
version = "1.0.0"
description = "Voice-controlled interface for Claude with TTS and VAD"
requires-python = ">=3.10"
dependencies = [
    "openai-whisper",
    "pyaudio",
    "numpy",
    "sounddevice",
]

[project.optional-dependencies]
tts = [
    "TTS",  # Coqui TTS
]
vad = [
    "silero-vad",
    "torch",
    "torchaudio",
]
dev = [
    "ruff",
    "black",
    "mypy",
    "pre-commit",
]

[tool.ruff]
line-length = 100
target-version = "py310"
extend-exclude = [".context", ".venv", "__pycache__", ".git"]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip() without explicit strict parameter
    "SIM108", # Use ternary operator instead of if-else
    "E722",  # Allow bare except for keyboard interrupt handling
    "SIM105", # Allow try-except-pass for optional imports
]

[tool.ruff.lint.per-file-ignores]
"demo-vad.py" = ["T201"]  # Allow print statements in demo
"quick-noise-test.py" = ["T201"]  # Allow print statements in test

[tool.ruff.lint.isort]
known-first-party = ["claude_voice"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
# Using relative path for portability
tdd_guard_project_root = "."